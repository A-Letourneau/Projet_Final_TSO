#!/home/beaulibe/monenv/bin/python3
"""
Auteur : Alexis Létourneau
Date : 2024-12-03
Environnement : Python, Thonny, raspberry pi 4, ESP32-C3-WROOM-02 Devkit, 
Brief : Programme qui affiche les données reçu par la communication i2c de 3 esp32 externes en mode Sub et qui affiche leurs donnees avec interface PySimpleGUI.
Ce programme communique en i2c en mode Main avec les 3 esp32 en mode Sub. 
Les 3 esp32 ont des objets interactifs (potentiomètres, boutons, interrupteurs) différents, 
Celui nommé SW contient quatre boutons
Celui nommé POT contient 3 potentiomètres et 2 interrupteurs.
Celui nomme Croco est 8 entrees qui transmet si deux des entrees sont interconnecte.
Les lectures de ces objets sont transmises par JSON à la demande du Main à toutes les 50ms


Les 3 esp32 ont une interface chaque, qui contient des "widget" qui représentent leurs états.
L'interface POT utilise deux images d'interrupteurs pointant vers la gauche ou la droite fait en base64, ce qui permet d'avoir le fichier de l'image dans le fichier py directement. 
et utilise des "ProgressBar" pour montrer l'état des potentiomètres.
L'interface SW utilise des cercles de couleur rouge et vert pour démontrer l'état des boutons.
L'interface Croco utilise des cercles de couleurs pour montrer qu'elle entrees du esp32 est interconnectee.
Quand on ferme une des fenêtres, les deux se ferme.

"""
#importation des library standard
from smbus2 import SMBus, i2c_msg   #Pour la communication i2c
import PySimpleGUI as sg            #Pour l'interface graphique
import board
from digitalio import DigitalInOut, Direction, Pull
import time
from rpi_ws281x import PixelStrip, Color
import math

#importation des library créer
import moduleDEL    #Module pour le controle des DEL
from Class_Croco import Croco
import I2c_Comm
from Class_SW import SW_MODULE
from Class_POT import POT
from mazeModule import mazeClass
from button import BTN_CLASS

#Les deux images d'interrupteurs en base 64
TOGGLE_SW_OFF = b''
TOGGLE_SW_ON = b''

LOGO = b''
#Les addresses des Sub
#je garde les adresses dans le main.py pour que ce soit plus facilement accessibles (Louis)
SLAVE_ADDRESS_Croco = 0x0b
SLAVE_ADDRESS_SW = 0x0a
SLAVE_ADDRESS_POT = 0x09

#La valeur de refresh en ms
REFRESH_RATE = 10

#Pour le debogagge
DEBUG = False
DEL_ACTIVE = True
MAXIMIZE = True

# The number of NeoPixels
num_pixels = 72

# luminosités des bandes de dels
lumin = 50

# Pin number
pinStrip1 = 21
#pinStrip2 = 13
pinStrip3 = 12
pinStrip4 = 18 

# Pour les equations
LIST_OPERATIVE = ["+","x"] #exemple de quatre questions possibles
#LIST_OPERATIVE = ["+"]
REPEAT_PUZZLE = False

#Enigme POT
GOAL_COR_ANSWER = 2

#Enigme switch
binAnswer = "00101010"

curEnigme = "Start"

waveProgress = 150
dirLED = 1

startTime = time.time()
maxTime = 250

# LED setup.
led = DigitalInOut(board.D26)
led.direction = Direction.OUTPUT
#BTN setup
switch = DigitalInOut(board.D13)
switch.direction = Direction.INPUT

#Reset setup
resetCroco = DigitalInOut(board.D16)
resetCroco.direction = Direction.OUTPUT

resetSwitch = DigitalInOut(board.D20)
resetSwitch.direction = Direction.OUTPUT

resetPot = DigitalInOut(board.D19)
resetPot.direction = Direction.OUTPUT

#Reset des esp32 pour init la communication
resetCroco.value = False
resetSwitch.value = False
resetPot.value = False
time.sleep(0.01)
resetCroco.value = True
resetSwitch.value = True
resetPot.value = True

#-------------------------------------fonction pour la library Del-------------------------------------#
#fait des objets pour modifier les dels.    (le num de la pin, le nombre de dels, luminosité si c'est GPIO13 ou 19)
strip1 = moduleDEL.initStrip(pinStrip1, num_pixels, lumin, False)
#strip2 = moduleDEL.initStrip(pinStrip2, num_pixels, lumin, True)
strip3 = moduleDEL.initStrip(pinStrip3, num_pixels, lumin, False)
strip4 = moduleDEL.initStrip(pinStrip4, num_pixels, lumin, False)

if DEL_ACTIVE:
    #active les objets strip pour qu'ils puissent être utilisés
    strip1.begin()
#    strip2.begin()
    strip3.begin()
    strip4.begin()


#fait des objets de classes des énigmes
my_Croco = Croco(SLAVE_ADDRESS_Croco, LIST_OPERATIVE, DEBUG, strip1, REPEAT_PUZZLE)
my_SW = SW_MODULE(SLAVE_ADDRESS_SW, DEBUG, strip1, binAnswer)
mazeEnigme = mazeClass(mazeFile=open(f"/home/beaulibe/Desktop/Mallette_GUI/Prototype_Fonctionnel_sur_PI/maze1.txt"), nbGate=4, SLAVE_ADDRESS_MAZE=SLAVE_ADDRESS_SW, DEBUG=DEBUG, DEL_ACTIVE=DEL_ACTIVE, strip=strip1)
my_POT = POT(SLAVE_ADDRESS_POT, DEBUG, strip1, GOAL_COR_ANSWER)
buttonEnigme = BTN_CLASS(switch, led, DEBUG, strip1)

windowFinal = 0
windowStart = 0
btnEvent = ''
btnRebound = False

if DEL_ACTIVE:
      moduleDEL.colorWipe(strip1, Color(255, 0, 0), 0)  # Red wipe

#Boucle principale
while True: 
    # crée les interfaces utilisateurs selon la serie d'enimge
    if curEnigme == "Start":
        if switch.value == True:
            btnRebound = True
        if switch.value == False and btnRebound:
            btnEvent = "Start"
            btnRebound = False
            moduleDEL.colorWipe(strip1, Color(255, 0, 0), 0)  # Red wipe
        if not windowStart:
            layoutStart = [
                [sg.VPush()],
                [sg.Push(), sg.Image(data=LOGO, size=(1100,700), key='trophy'), sg.Push()],
                [sg.Push(), sg.Button("Start", font = "Monaco 20",size=(70,3)), sg.Push()], 
                [sg.VPush()]
             ]
            windowStart = sg.Window("Début", layoutStart, finalize=True)
            if MAXIMIZE:
                windowStart.maximize()

    
    if curEnigme == "SW":
        if not my_SW.window_SW:
            my_SW.puzzleSolved = False
            my_SW.window_SW = my_SW.Make_WinSW()
            moduleDEL.colorInBetween(strip1, Color(255, 0, 255), my_SW.minDEL, my_SW.maxDEL)
            if MAXIMIZE:
                my_SW.window_SW.maximize()
            
    if curEnigme == "POT":
        if not my_POT.window_POT:
            my_POT.resetPuzzle()
            my_POT.window_POT = my_POT.Make_WinPOT()
            moduleDEL.colorInBetween(strip1, Color(255, 0, 255), my_POT.minDEL, my_POT.maxDEL)
            if MAXIMIZE:
                my_POT.window_POT.maximize()
    
    if curEnigme == "Croco":
        if not my_Croco.window_Croco:
            my_Croco.resetPuzzle()
            my_Croco.window_Croco = my_Croco.Make_WinCroco()
            moduleDEL.colorInBetween(strip1, Color(255, 0, 255), my_Croco.minDEL, my_Croco.maxDEL)
            if MAXIMIZE:
                my_Croco.window_Croco.maximize()
            
    if curEnigme == "Labyrinthe":
        if not mazeEnigme.window_maze:
            mazeEnigme.puzzleSolved = False
            mazeEnigme.startMaze()
            moduleDEL.colorInBetween(strip1, Color(255, 0, 255), mazeEnigme.minDEL, mazeEnigme.maxDEL)  # Red wipe
            moduleDEL.colorInBetween(strip1, Color(255, 0, 255), my_SW.minDEL, my_SW.maxDEL)
            if MAXIMIZE:
                mazeEnigme.window_maze.maximize()
            
    if curEnigme == "Bouton":
        if not buttonEnigme.window:
            buttonEnigme.puzzleSolved = False
            buttonEnigme.window = buttonEnigme.Make_WinBTN()
            if MAXIMIZE:
                buttonEnigme.window.maximize()
            
    if curEnigme == "Done":
        if switch.value == True:
            btnRebound = True
        if switch.value == False and btnRebound:
            btnEvent = "Done"
            btnRebound = False
        if not windowFinal:
            
            layoutFinal = [
                [sg.VPush()],
                [sg.Push(), sg.Text("Temps final", key = "time", size=(50,1), font='Algerian 20', justification = "center"), sg.Push()],
                [sg.Push(), sg.Image(source="/home/beaulibe/Desktop/Mallette_GUI/Prototype_Fonctionnel_sur_PI/Fireworks.png", size=(1100,700), key='trophy'), sg.Push()],
                [sg.Push(), sg.Button("Fin"), sg.Button("Exit"), sg.Push()], 
                [sg.VPush()]
             ]
            windowFinal = sg.Window("VICTOIRE", layoutFinal, finalize=True)
            if MAXIMIZE:
                windowFinal.maximize()
            windowFinal["time"].update(f"Temps final : {time.strftime('%M:%S', time.gmtime( int(time.time()) - int(startTime) )) }")

    #-------------Lecture des boutons des fenetres--------------#
    if curEnigme != "Labyrinthe":
        window, event, value = sg.read_all_windows(timeout = REFRESH_RATE)
        if btnEvent == "Done":
            windowFinal.close()
            windowFinal = None
            curEnigme = "Start"
            btnEvent = ''
        elif (window == sg.WIN_CLOSED or event == "Exit") and event != sg.TIMEOUT_EVENT:
            print("CLose event")
            break
        elif btnEvent == "Start":
            windowStart.close()
            windowStart = None
            startTime = time.time()
            curEnigme = "SW"
            btnEvent = ''
        elif event == 'Exit' or event == sg.WIN_CLOSED: #Si on ferme une fenetre on ferme toutes les fenetres
            window.close()
            if window == my_SW.window_SW:
                my_SW.window_SW = None
            elif window == my_POT.window_POT:
                my_POT.window_POT = None
            elif window == my_Croco.window_Croco:
                my_Croco.window_Croco = None
            elif window == buttonEnigme.window:
                buttonEnigme.window = None

       
    if dirLED:
        if waveProgress >= 250:
            dirLED = 0
        else:
            waveProgress += 50
    else:
        if waveProgress <= 0:
            dirLED = 1
        else:
            waveProgress -= 50
            
    if curEnigme != "Start" and curEnigme != "Done":
        remainingTime = maxTime - (int(time.time()) - int(startTime))  
        if remainingTime < 0 or buttonEnigme.puzzleSolved == "Fail":
            sg.popup_no_titlebar('ÉCHEC', auto_close_duration = 5, font='Algerian 20',auto_close = True)
            my_SW.puzzleSolved = False
            my_POT.resetPuzzle()
            my_Croco.resetPuzzle()
            buttonEnigme.puzzleSolved = False
            curEnigme = "Start"
            if my_SW.window_SW:
                my_SW.window_SW.close()
                my_SW.window_SW = None
            if my_POT.window_POT:    
                my_POT.window_POT.close()
                my_POT.window_POT = None
            if my_Croco.window_Croco: 
                my_Croco.window_Croco.close()
                my_Croco.window_Croco = None
            if mazeEnigme.window_maze:
                mazeEnigme.window_maze.close()
                mazeEnigme.window_maze = None
            if buttonEnigme.window:
                buttonEnigme.window.close()
                buttonEnigme.window = None
            if windowFinal:
                windowFinal.close()
                windowFinal = None
        
        
    #Essaye de lire les json des esp32 et met un message d'erreur s'il n'y parvient pa
    if my_SW.window_SW:
        moduleDEL.colorInBetween(strip1, Color(int(waveProgress), 0, int(waveProgress)), my_SW.minDEL, my_SW.maxDEL)
        my_SW.msg_SW = my_SW.SW_Json()
        my_SW.window_SW["countDown"].update(f"Temps restant : {remainingTime}s")
        if my_SW.puzzleSolved == True:
            my_SW.window_SW.read(timeout = 0)
            my_SW.window_SW.close()
            my_SW.window_SW = None
            curEnigme = "Croco"

    if my_Croco.window_Croco:
        moduleDEL.colorInBetween(strip1, Color(int(waveProgress), 0, int(waveProgress)), my_Croco.minDEL, my_Croco.maxDEL)
        my_Croco.msg_Croco = my_Croco.Croco_Json()
        my_Croco.doWinCroco()
        my_Croco.window_Croco["countDown"].update(f"Temps restant : {remainingTime}s")
        if my_Croco.puzzleSolved == True:
            my_Croco.window_Croco.read(timeout = 0)
            my_Croco.window_Croco.close()
            my_Croco.window_Croco = None
            curEnigme = "POT"
        
    if  my_POT.window_POT:
        moduleDEL.colorInBetween(strip1, Color(int(waveProgress), 0, int(waveProgress)), my_POT.minDEL, my_POT.maxDEL)
        my_POT.msg_POT = my_POT.POT_Json()
        my_POT.doWinPot()
        my_POT.window_POT["countDown"].update(f"Temps restant : {remainingTime}s")
        if my_POT.puzzleSolved == True:
            my_POT.window_POT.close()
            my_POT.window_POT = None
            curEnigme = "Labyrinthe"
    
    if mazeEnigme.window_maze:
        moduleDEL.colorInBetween(strip1, Color(int(waveProgress), 0, int(waveProgress)), my_SW.minDEL, my_SW.maxDEL)
        moduleDEL.colorInBetween(strip1, Color(int(waveProgress), 0, int(waveProgress)), mazeEnigme.minDEL, mazeEnigme.maxDEL)
        mazeEnigme.doMaze()
        mazeEnigme.window_maze["countDown"].update(f"Temps restant : {remainingTime}s")
        if mazeEnigme.puzzleSolved == True:
            mazeEnigme.window_maze.read(timeout = 0)
            mazeEnigme.window_maze.close()
            mazeEnigme.window_maze = None
            curEnigme = "Bouton"
                  
    if buttonEnigme.window:
        buttonEnigme.doButton()
        buttonEnigme.window["countDown"].update(f"Temps restant : {remainingTime}s")
        if buttonEnigme.puzzleSolved == True:
            buttonEnigme.window.read(timeout = 0)
            time.sleep(2)
            buttonEnigme.window.close()
            buttonEnigme.window = None
            curEnigme = "Done"
            

    #débute les énigmes si leur fenêtre est présentement ouverte
    # et va changer les couleurs des strips de dels lorsque l'utilisateur va réussir
    

#À la fin du programme, on ferme les fenêtres s'il existe
if my_SW.window_SW:
    my_SW.window_SW.close()       
if my_POT.window_POT:    
    my_POT.window_POT.close()            
if my_Croco.window_Croco: 
    my_Croco.window_Croco.close()
if buttonEnigme.window:
    buttonEnigme.window.close()
if windowFinal:
    windowFinal.close()



print("closing")


